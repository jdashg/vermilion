#! /usr/bin/env python3
import os
import subprocess
import sys


GIT_ENV = dict(os.environ)

def run_git(*x, **kw):
    sys.stdout.flush()
    return subprocess.run(['git'] + list(x), env=GIT_ENV, check=True, **kw)

def run_git_lines(*x):
    p = run_git(*x, stdout=subprocess.PIPE)
    return p.stdout.decode().splitlines()

try:
    cinnabar_path = run_git_lines('config', 'cinnabar.path')[0]
    GIT_ENV['PATH'] += ':' + cinnabar_path
except subprocess.CalledProcessError:
    pass

REMOTES = run_git_lines('remote')


print(str(sys.argv))
(ref_name, old_hash, new_hash) = sys.argv[1:4]

(_refs,_heads,remote) = ref_name.split('/')
assert _refs == 'refs'
assert _heads == 'heads'

if remote not in REMOTES:
    print('Unrecognized remote: ' + remote)
    exit(1)

print('Fetching from hg...')
try:
    run_git('fetch', remote, 'branches/default/tip')
except subprocess.CalledProcessError:
    print('Did you forget to set cinnabar.path?')
    raise

if not new_hash.replace('0', ''):
    print('Git delete syntax interpreted as fetch-only.')
    exit(1)

dest = 'refs/remotes/'+remote+'/branches/default/tip'
#run_git('merge-base', '--is-ancestor', dest, newhash, check=True)

run_git('push', remote, new_hash+':'+dest)
